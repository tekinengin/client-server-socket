head	1.24;
access;
symbols;
locks;
comment	@// @;


1.24
date	2017.08.02.22.58.04;	author -;	state -;
branches;
next	1.23;

1.23
date	2016.07.26.03.10.50;	author -;	state -;
branches;
next	1.22;

1.22
date	2015.08.07.00.38.19;	author -;	state -;
branches;
next	1.21;

1.21
date	2015.08.07.00.36.19;	author -;	state -;
branches;
next	1.20;

1.20
date	2015.08.07.00.35.33;	author -;	state -;
branches;
next	1.19;

1.19
date	2015.08.07.00.34.39;	author -;	state -;
branches;
next	1.18;

1.18
date	2015.08.07.00.34.25;	author -;	state -;
branches;
next	1.17;

1.17
date	2015.08.07.00.33.27;	author -;	state -;
branches;
next	1.16;

1.16
date	2015.08.07.00.33.02;	author -;	state -;
branches;
next	1.15;

1.15
date	2015.08.07.00.32.52;	author -;	state -;
branches;
next	1.14;

1.14
date	2015.08.07.00.30.03;	author -;	state -;
branches;
next	1.13;

1.13
date	2015.08.07.00.29.28;	author -;	state -;
branches;
next	1.12;

1.12
date	2015.08.07.00.28.13;	author -;	state -;
branches;
next	1.11;

1.11
date	2015.08.07.00.26.16;	author -;	state -;
branches;
next	1.10;

1.10
date	2015.08.07.00.25.18;	author -;	state -;
branches;
next	1.9;

1.9
date	2015.08.07.00.23.44;	author -;	state -;
branches;
next	1.8;

1.8
date	2015.08.07.00.22.26;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.08.07.00.17.14;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.08.07.00.17.02;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.08.07.00.16.27;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.08.07.00.16.11;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.08.06.22.13.30;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.08.06.22.13.06;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.08.06.22.12.46;	author -;	state -;
branches;
next	;


desc
@@


1.24
log
@-
@
text
@// $Id: getenv.cpp,v 1.23 2016-07-25 20:10:50-07 - - $

// NAME
//    showgetenv - show the operation of getenv
//
// SYNOPSIS
//    showgetenv envvar...
//
// DESCRIPTION
//    Prints the value of environment variables given on the
//    command line.
//

#include <algorithm>
#include <cstdlib>
#include <iostream>
#include <libgen.h>
#include <string>
#include <vector>
using namespace std;

int main (int argc, char**argv) {
   int status = EXIT_SUCCESS;
   string execname = basename (argv[0]);
   vector<string> args (&argv[1], &argv[argc]);
   if (args.size() == 0) {
      extern char** environ;
      for (auto env = environ; *env != nullptr; ++env) {
         cout << *env << endl;
      }
   }else {
      for (string varname: args) {
         const char* value = getenv (varname.c_str());
         if (value == nullptr) {
            cerr << execname << ": " << varname << ": no such variable"
                 << endl;
            status = EXIT_FAILURE;
         }else {
            cout << varname << "=" << value << endl;
         }
      }
   }
   return status;
}

//TEST// mkpspdf getenv.cpp.ps getenv.cpp
@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.22 2015-08-06 17:38:19-07 - - $
d46 1
a46 1
//TEST// mkpspdf getenv.cpp.ps getenv.cpp*
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.21 2015-08-06 17:36:19-07 - - $
d45 2
@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.20 2015-08-06 17:35:33-07 - - $
d14 1
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.19 2015-08-06 17:34:39-07 - - $
a13 1
#include <algorithm>
@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.18 2015-08-06 17:34:25-07 - - $
d28 3
a30 4
      vector<string> env_vec;
      for (auto env = environ; *env != nullptr; ++env) env_vec.push_back (*env);
      sort (env_vec.begin(), env_vec.end());
      for (const auto env: env_vec) cout << env << endl;
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.17 2015-08-06 17:33:27-07 - - $
d30 1
a30 1
      //sort (env_vec.begin(), env_vec.end());
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.16 2015-08-06 17:33:02-07 - - $
d29 1
a29 1
      for (auto env = environ; env != nullptr; ++env) env_vec.push_back (*env);
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.15 2015-08-06 17:32:52-07 - - $
d30 1
a30 1
      sort (env_vec.begin(), env_vec.end());
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.7 2015-08-06 17:17:14-07 - - $
d14 1
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.9 2015-08-06 17:23:44-07 - - $
a13 1
#include <algorithm>
d26 5
a30 5
      extern const char* const* environ;
      auto end = find (&environ[0], nullptr, nullptr);
      vector<string> env (&environ[0], end);
      sort (env.begin(), env.end());
      for (const auto& var: env) cout << var << endl;
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.7 2015-08-06 17:17:14-07 - - $
d14 1
d27 5
a31 4
      extern char** environ;
      for (const char* const* env = environ; *env != nullptr; ++env) {
         cout << *env << endl;
      }
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.11 2015-08-06 17:26:16-07 - - $
a13 1
#include <algorithm>
d26 4
a29 8
      using const_charpp = const char* const* const;
      extern const_charpp environ;
      const_charpp null_charpp = nullptr;
      auto end = find (&environ[0], null_charpp, nullptr);
      cout << environ << ", " << *environ << ", " << end << endl;
      vector<string> env (&environ[0], end);
      sort (env.begin(), env.end());
      for (const auto& var: env) cout << var << endl;
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.10 2015-08-06 17:25:18-07 - - $
d31 1
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.9 2015-08-06 17:23:44-07 - - $
d30 1
a30 1
      auto end = find (&environ[0], null_charpp, null_charpp);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.8 2015-08-06 17:22:26-07 - - $
d27 4
a30 2
      extern const char* const* environ;
      auto end = find (&environ[0], nullptr, nullptr);
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.7 2015-08-06 17:17:14-07 - - $
d27 1
a27 1
      extern char** environ;
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.6 2015-08-06 17:17:02-07 - - $
d14 1
d28 4
a31 3
      for (const char* const* env = environ; *env != nullptr; ++env) {
         cout << *env << endl;
      }
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.5 2015-08-06 17:16:27-07 - - $
d28 1
a28 1
         cout << env << endl;
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.4 2015-08-06 17:16:11-07 - - $
d27 1
a27 1
      for (const char** env = environ; *env != nullptr; ++env) {
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.3 2015-08-06 15:13:30-07 - - $
d26 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.2 2015-08-06 15:13:06-07 - - $
d26 3
a28 2
      cerr << "Usage: " << execname << " envvar..." << endl;
      status = EXIT_FAILURE;
d37 1
a37 1
            cout << execname << ": " << varname << "=" << value << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: getenv.cpp,v 1.1 2015-08-06 15:12:46-07 - - $
d16 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d16 2
@
